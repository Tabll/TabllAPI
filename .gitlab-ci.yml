variables:
  MYSQL_DATABASE: project_name
  MYSQL_ROOT_PASSWORD: secret

stages:
  - testing
  - production

  # Update packages
  # - apt-get update -yqq
  # Prep for Node
  # - apt-get install gnupg -yqq
  # Upgrade to Node 8
  # - curl -sL https://deb.nodesource.com/setup_8.x | bash -
  # Install dependencies
  # - apt-get install git nodejs libcurl4-gnutls-dev libicu-dev libmcrypt-dev libvpx-dev libjpeg-dev libpng-dev libxpm-dev zlib1g-dev libfreetype6-dev libxml2-dev libexpat1-dev libbz2-dev libgmp3-dev libldap2-dev unixodbc-dev libpq-dev libsqlite3-dev libaspell-dev libsnmp-dev libpcre3-dev libtidy-dev -yqq
  # Install php extensions
  # - docker-php-ext-install mbstring pdo_mysql curl json intl gd xml zip bz2 opcache
  # Install & enable Xdebug for code coverage reports
  # - pecl install xdebug
  # - docker-php-ext-enable xdebug
  # Install Composer and project dependencies.
  # - curl -sS https://getcomposer.org/installer | php
  # - php composer.phar install
  # Install Node dependencies.
  # comment this out if you don't have a node dependency
  # - npm install
  # Copy over testing configuration.
  # Don't forget to set the database config in .env.testing correctly

test:
  stage: testing
  tags:
    - test

  cache:
    paths:
      - vendor/
      - node_modules/

  script:
    # - ~/.composer/vendor/bin/phpcs --error-severity=1 --warning-severity=8 --extensions=php
    - cp .env.test .env
    - composer config repo.packagist composer https://mirrors.aliyun.com/composer/
    - composer install --ignore-platform-reqs --prefer-dist --no-scripts -o
#    - composer dump-autoload
#    - php artisan clear-compiled
    - php artisan config:cache
    - php artisan cache:clear
    - php artisan migrate
#    - vendor/bin/phpunit --coverage-text --colors=never
    - vendor/bin/paratest --coverage-text tests

#  only:
#    refs:
#      - develop

# 部署至生产环境
deploy to production:
  stage: production

  tags:
    - production

  before_script:
#    解决 Windows 乱码
    - chcp 65001

  script:
    - cd \
    - cd TabllAPI
    - git pull
    - git checkout $env:ProductionBranch
    - composer install
    - php artisan config:clear
    - php artisan migrate --no-interaction --force
    - php artisan cache:clear

  when: manual
